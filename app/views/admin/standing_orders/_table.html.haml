= render :partial => "spree/admin/variants/autocomplete", :formats => :js
%script{ type: "text/ng-template", id: "admin/panels/standing_order_products.html" }
  %form{ name: 'standing_order_form', ng: { controller: 'ProductsPanelController' } }
    %div{ style: 'width: 90%; margin: auto;' }
      = render 'products'
    %button{ ng: { click: 'standingOrder.update()'} } Save

%table.index#standing_orders
  %col.customer{ width: "20%", 'ng-show' => 'columns.customer.visible' }
  %col.schedule{ width: "15%", 'ng-show' => 'columns.schedule.visible' }
  %col.items{ width: "15%", 'ng-show' => 'columns.items.visible' }
  %col.begins_on{ width: "15%", 'ng-show' => 'columns.begins_on.visible' }
  %col.ends_on{ width: "15%", 'ng-show' => 'columns.ends_on.visible' }
  %col.payment_method{ width: "20%", 'ng-show' => 'columns.payment_method.visible' }
  %col.shipping_method{ width: "20%", 'ng-show' => 'columns.shipping_method.visible' }
  %col.actions{ width: "5%" }
  %thead
    %tr
      -# %th.bulk
        -# %input{ :type => "checkbox", :name => 'toggle_bulk', 'ng-click' => 'toggleAllCheckboxes()', 'ng-checked' => "allBoxesChecked()" }
      %th.customer{ ng: { show: 'columns.customer.visible' } }
        = t('admin.customer')
      %th.schedule{ ng: { show: 'columns.schedule.visible',  } }
        = t('admin.schedule')
      %th.items{ ng: { show: 'columns.items.visible',  } }
        = t('admin.items')
      %th.begins_on{ ng: { show: 'columns.begins_on.visible',  } }
        = t('admin.begins_on')
      %th.ends_on{ ng: { show: 'columns.ends_on.visible',  } }
        = t('admin.ends_on')
      %th.payment_method{ ng: { show: 'columns.payment_method.visible',  } }
        = t('admin.payment_method')
      %th.shipping_method{ ng: { show: 'columns.shipping_method.visible',  } }
        = t('admin.shipping_method')
      %th.actions
        &nbsp;
  %tbody.panel-ctrl{ object: 'standingOrder', ng: { repeat: "standingOrder in standingOrders | filter:query" } }
    %tr.standing_order{ :id => "so_{{standingOrder.id}}", class: { even: "'even'", odd: "'odd'" } }
      %td.customer.text-center{ ng: { show: 'columns.customer.visible', bind: '::standingOrder.customer.email' } }
      %td.schedule.text-center{ ng: { show: 'columns.schedule.visible', bind: '::standingOrder.schedule.name' } }
      %td.items.panel-toggle.text-center{ name: 'products', ng: { show: 'columns.items.visible' } }
        %h5{ ng: { bind: 'itemCount(standingOrder)' } }
      %td.begins_on.text-center{ ng: { show: 'columns.begins_on.visible', bind: '::standingOrder.begins_on' } }
      %td.ends_on.text-center{ ng: { show: 'columns.ends_on.visible', bind: '::standingOrder.ends_on' } }
      %td.payment_method{ ng: { show: 'columns.payment_method.visible', bind: '::standingOrder.payment_method.name' } }
      %td.shipping_method{ ng: { show: 'columns.shipping_method.visible', bind: '::standingOrder.shipping_method.name' } }
      %td.actions
        %a.edit-standing-order.icon-edit.no-text{ ng: { href: '{{standingOrder.edit_path}}'} }
      -#   %a.delete-standing-order.icon-trash.no-text{ ng: { href: '{{standingOrder.delete_path}}'}, data: { method: 'delete', confirm: "Are you sure?" } }

    %tr.panel-row{ object: "standingOrder", panels: "{products: 'standing_order_products'}" }
